name: Build and Deploy to Minikube

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      AWS_REGION: "us-west-2"
      AWS_ACCOUNT_ID: "338287058401"
      ECR_REPOSITORY: "laboratorio_mafe"
      IMAGE_TAG: "latest"
      NAMESPACE: "lab-mafe-ci-cd"
      NGROK_AUTH_TOKEN: ${{ secrets.NGROK_AUTH_TOKEN }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Configure AWS credentials
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: ${{ env.AWS_REGION }}
        run: |
          aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
          aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
          aws configure set region $AWS_REGION

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com

      - name: Build Docker image
        run: |
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG .
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Push Docker image to ECR
        run: docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_REGION.amazonaws.com/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Set execute permissions for kubeconfig
        run: chmod 600 /ruta/a/tu/kubeconfig

      - name: Start Minikube
        id: minikube
        uses: medyagh/setup-minikube@latest
        with:
          kubernetes-version: 'v1.30.0'
          minikube-start-args: '--wait=all --driver=docker'

      - name: Use local cluster
        run: |
          kubectl cluster-info
          kubectl apply -f deployment.yaml -n $NAMESPACE
          kubectl apply -f kubernetes/service.yaml
          kubectl apply -f kubernetes/ingress.yaml
          ngrok start --all --config=kubernetes/ngrok.yml --region=us --authtoken=$NGROK_AUTH_TOKEN --log=stdout > ngrok.log &
          sleep 10
          echo "Ngrok tunnel URL:"
          cat ngrok.log | grep "Forwarding"
          echo "::set-output name=ngrok-url::$(cat ngrok.log | grep "Forwarding" | awk '{ print $NF }')"

